#!/bin/bash

# Enable error handling: stop the script if any command fails
set -e

# Initialize a variable to store the list of changes
changes=""

# Function to add changes to the summary
add_change() {
  local message="$1"
  changes="${changes} - $message"$'\n'
}

# Temporarily disable SELinux
setenforce 0

# Persistently disable SELinux
sudo sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config
add_change "Permanently disabled SELinux in configuration file"

# Prompt the user for the new hostname
read -p "Enter the new hostname: " new_hostname

# Set the new hostname
hostnamectl set-hostname "$new_hostname"
add_change "Hostname set to: $new_hostname"

# Update /etc/hostname
echo "$new_hostname" | sudo tee /etc/hostname > /dev/null
add_change "Updated /etc/hostname"

# Update /etc/hosts
sed -i "s/127.0.0.1.*/127.0.0.1   localhost $new_hostname/" /etc/hosts
add_change "Updated /etc/hosts"

# Change SSH port to 1157
sudo sed -i 's/#Port 22/Port 1157/' /etc/ssh/sshd_config
add_change "Changed SSH port to 1157"

# Restart SSH to apply changes
systemctl restart sshd
add_change "Restarted SSH service"

# Enable the EPEL repository
dnf install -y epel-release

# Install the network-scripts package
dnf install -y network-scripts
add_change "Installed network-scripts package"

# Install Nettools 
dnf install -y net-tools

# Install Fail2Ban
dnf install -y fail2ban
add_change "Installed Fail2Ban"

# Install Firewalld and whitelist SSH and additional ports
dnf install -y firewalld
systemctl enable firewalld
systemctl start firewalld
firewall-cmd --permanent --add-port=6767/tcp
firewall-cmd --permanent --add-port=5901-5999/tcp
firewall-cmd --permanent --add-port=53/tcp
firewall-cmd --permanent --add-port=53/udp
firewall-cmd --permanent --zone=public --add-service=ssh
firewall-cmd --reload
add_change "Configured Firewalld rules"

# Install auditd
dnf install -y audit
systemctl enable auditd
systemctl start auditd
add_change "Installed and configured auditd"

# Configure logrotate for audit logs
sudo tee -a /etc/logrotate.d/audit <<EOL
/var/log/audit/*.log {
    weekly
    rotate 4
    compress
    delaycompress
    missingok
    notifempty
    create 0600 root root
}
EOL
add_change "Configured logrotate for audit logs"

# Disable Network Manager
systemctl stop NetworkManager
systemctl disable NetworkManager
systemctl enable network
systemctl start network
add_change "Disabled Network Manager"

# Find the active interface
active_interface=$(ip route get 8.8.8.8 | awk '{print $5}')
add_change "Active Interface: $active_interface"

# Find IP, gateway, and subnet
ip_info=$(ip -4 addr show "$active_interface" | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
gateway=$(ip route | awk '/default/ {print $3}')
prefix=$(ip -4 addr show "$active_interface" | awk '/inet / {print $2}' | cut -d'/' -f2)

# Install bridge-utils package
dnf install -y bridge-utils
add_change "Installed bridge-utils package"

# Check if /etc/sysconfig/network-scripts/ifcfg-br0 already exists and abort if it does
if [ -e "/etc/sysconfig/network-scripts/ifcfg-br0" ]; then
  echo "Error: /etc/sysconfig/network-scripts/ifcfg-br0 already exists. Aborting."
  exit 1
fi

# Create /etc/sysconfig/network-scripts/ifcfg-br0
cat <<EOL |  tee /etc/sysconfig/network-scripts/ifcfg-br0
DEVICE=br0
TYPE=Bridge
BOOTPROTO=static
ONBOOT=yes
NM_CONTROLLED=no
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
IPADDR=$ip_info
PREFIX=$prefix
GATEWAY=$gateway
EOL
add_change "Created /etc/sysconfig/network-scripts/ifcfg-br0"

# Create a backup of the original interface configuration file
cp "/etc/sysconfig/network-scripts/ifcfg-$active_interface" "/root/ifcfg-$active_interface.backup"

# Create a new ifcfg-eth0 file with the specified configuration
cat <<EOL | sudo tee /etc/sysconfig/network-scripts/ifcfg-$active_interface > /dev/null
NAME=$active_interface
DEVICE=$active_interface
ONBOOT=yes
NM_CONTROLLED=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
BRIDGE=br0
EOL
add_change "Configured $active_interface as a bridge interface"

# Restart the network service
systemctl restart network
add_change "Restarted the network service"

# Display the summary of changes
echo -e "Summary of Changes:\n$changes"
